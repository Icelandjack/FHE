* Abstract

* Introduction

* Preliminary implementation
A preliminary implementation of the symmetric version of the somewhat
homomorphic encryption scheme (SHE) described in Gentry's original
thesis[1] in Haskell, and later the asymmetric version.
* DSL Design
When designing the DSL a high-level design was ...

Inspired by Cryptol with type-level naturals[2]

: split : {a b c} [a*b]c -> [a][b]c

: KeyExpansion_128 : [4][32] -> [11][4][4][8];
: KeyExpansion_128 keyAsWords = [| transpose s || s <- ss ]]
:   where {
:     ss = groupBy(4, [| reverse (splitBy(4, w)) || w <- ws |]);
:     ws = keyAsWords # ([| nextWord_128(i, w, w')
:                        || i  <- [4..43]
:                        || w  <- ws
:                        || w' <- drop(3, ws)
:                        |]);
:   };

There was inspiration from other DSL's such as Lava 

* Related Work
+ “[[https://eprint.iacr.org/2011/561.pdf][A Domain-Specific Language for Computing on Encrypted Data]]”
Haskell-based EDSL 
+ “Generating Fast Multipliers Using Clever Circuits”
+ “[[https://drive.google.com/file/d/0ByALnB6PvvHEdlhGa01hQTcyckU/edit?usp=sharing][Making Domain-Specific Hardware Synthesis Tools Cost-Efficient]]”: The paper presents a method for efficient development of High-Level Synthesis (HLS) tools, which are normally very costly to create. The method is based on Lightweight Modular Staging, which is a compiler framework in Scala.

+ https://www.cs.drexel.edu/~mainland/publications/mainland10nikola.pdf A DSL for GPU computation with observable function application.

+ http://hackage.haskell.org/package/ersatz A library for sharing recommended by Edward Kmett

+ http://www.cs.uu.nl/wiki/pub/Afp/CourseLiterature/Gill-09-TypeSafeReification.pdf 

+ http://research.microsoft.com/pubs/146975/ihe.pdf Implementing fully homomorphic encryption

Original Domain Analysis paper for the CSP project (2001) [confidential]

Notes on performance of FPGA implementations of AES and DES (July, 2006)
See also IP Cores survey from George Mason U (Dec, 2005) 
Equivalence Checking Paper (Apr 2008) 
* References
[1] http://cs.au.dk/~stm/local-cache/gentry-thesis.pdf A Fully Homomorphic Encryption Scheme
[2] http://gauss.ececs.uc.edu/Courses/c4003/lectures/Cryptol/Cryptol-Tutorial.pdf
